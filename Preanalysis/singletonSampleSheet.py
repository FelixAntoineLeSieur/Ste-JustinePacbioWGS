import sys,os
import json
import subprocess
from Sample import Sample
from pathlib import Path
from configurator import Config
import argparse
import pandas as pd
import numpy as np
from jointCallSampleSheet import retrieve_samples

"""
Generate the WDL samplesheet for given sample.
Give the sample info (obtained from the sampleList generated by getSamples.py) as argument and a config file, optionally
"""
if __name__ == "__main__":
	parser = argparse.ArgumentParser(
		prog = 'singletonSampleSheet.py',
		usage = "python3 %(prog)s [-p proband_id] [--list sample_list --config config_file (optional)]",	
		description="""
		given a sample name, retrieve the samples included within. 
		Prints them a sample sheet in sample_path (defined in config)
		and a .txt list of samples from the same run for future use""")
	parser.add_argument('-p', '--proband',help='proband sample name',required=True)
	parser.add_argument('-l', '--list', nargs='?', const='mySampleList.txt', default='mySampleList.txt')
	parser.add_argument('-c', '--config', nargs='?', const='.myconf.json', default='.myconf.json')
	
	args		= parser.parse_args()
	configs  	= Config.from_path(args.config)

	#The paths specific to your configuration should be in the Paths section of the configs
	run_path = configs.Paths.run_path
	sample_sheet_path = configs.Paths.sample_sheet_path

	sample_list = pd.read_csv(args.list,sep=";",names=["Name","Well","Barcode","run_id","Gender","Status","Role","HPO","BAM","Affected"])
	sample_list = sample_list.replace({np.nan: ""})

	sample = retrieve_samples(sample_list, args.proband)
	print(sample)
	sample.write_singleton_samplesheet()
	#Write the list of sample name for this run and the path to their samplesheet
	with open(f"{sample_sheet_path}/{sample.run_id}_samples",'a') as fw:
		fw.write(f"{sample.name},{sample.run_id}_{sample.well}_{sample.name}.json,{sample.bam_path}\n")


